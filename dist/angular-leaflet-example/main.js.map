{"version":3,"sources":["./src/app/gqlcovid/gqlcovid.component.ts","./src/app/gqlcovid/gqlcovid.component.html","./src/app/marker.service.ts","./src/app/graphql.module.ts","./src/environments/environment.ts","./src/app/gqlcovid/gqlcovid.service.ts","./src/app/popup.service.ts","./src/app/covid/covid.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shape.service.ts","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/landing-page/landing-page.component.ts","./src/app/landing-page/landing-page.component.html","./src/app/covid/covid.component.ts","./src/app/covid/covid.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { GqlcovidService } from './gqlcovid.service';\r\n\r\n@Component({\r\n  selector: 'app-gqlcovid',\r\n  templateUrl: './gqlcovid.component.html',\r\n  styleUrls: ['./gqlcovid.component.css']\r\n})\r\nexport class GqlcovidComponent implements OnInit {\r\n  \r\n  constructor(private gqlcovidService: GqlcovidService) { }\r\n   data$ = this.gqlcovidService.countryData$;\r\n   confirmed$ = this.gqlcovidService.confirmed$;\r\n   deaths$ = this.gqlcovidService.deaths$;\r\n   growthRate$ = this.gqlcovidService.growthRate$;\r\n\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <button type=\"button\" class=\"btn\"  routerLink=\"/map\">CovidInfo</button>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\"  routerLink=\"/lp\" href=\"\">Home <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"http://35.232.232.192:8166/states?search=angular\">Redis</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n\r\n<h3><br></h3>\r\n<h1 style=\"text-align: center;\">Current Covid Situation in United States</h1>\r\n<h1><br></h1>\r\n\r\n\r\n<p style=\"padding: 1rem;\">In United States of America, from 3 January 2020 to 11:19am CEST, 15 June 2021, there have been {{confirmed$ | async}} confirmed cases of COVID-19 and {{confirmed$ | async}} deaths, reported to WHO. As of 11 June 2021</p>\r\n<h1><br></h1>\r\n<div class=\"row\" style=\"text-align: center;\">\r\n    <div class=\"col-sm-4\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">Confirmed Cases</h5>\r\n          <p class=\"card-text\">{{confirmed$ | async}}</p>\r\n          <a href=\"#\" class=\"btn btn-primary\">Know more!</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-4\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">Death Cases</h5>\r\n          <p class=\"card-text\">{{deaths$ | async}}</p>\r\n          <a href=\"#\" class=\"btn btn-primary\">Know more!</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Growth Rate Cases</h5>\r\n            <p class=\"card-text\">{{growthRate$ | async}}</p>\r\n            <a href=\"#\" class=\"btn btn-primary\">Know more!</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </div>\r\n  <h3><br></h3>\r\n<h1> </h1>\r\n<img style=\"margin-left: auto; margin-right: auto; display: block; width: 350px;\" src=\"https://i.pinimg.com/736x/bb/cd/aa/bbcdaa36d2dbfce8dc4b872800782f52.jpg\" alt=\"\">","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport * as L from 'leaflet';\r\nimport { PopUpService } from './popup.service';\r\nimport { CovidService } from './covid/covid.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MarkerService {\r\n  capitals: string = '/assets/data/usa-capitals.geojson';\r\n  constructor(\r\n    private http: HttpClient,\r\n    private popupService: PopUpService,\r\n    private covidService: CovidService\r\n  ) { }\r\n  static scaledRadius(val: number, maxVal: number): number {\r\n    return 20 * (val / maxVal);\r\n  }\r\n\r\n  makeCapitalMarkers(map: L.map): void {\r\n    this.http.get(this.capitals).subscribe((res: any) => {\r\n      for (const c of res.features) {\r\n        const lon = c.geometry.coordinates[0];\r\n        const lat = c.geometry.coordinates[1];\r\n        const marker = L.marker([lat, lon]);\r\n\r\n        //marker.addTo(map);\r\n      }\r\n    });\r\n  }\r\n\r\n  makeCapitalCircleMarkers(map: L.map): void {\r\n    var stateInfo: any;\r\n    this.http.get(this.capitals).subscribe((res: any) => {\r\n      res.features[0].properties.cases = 10000;\r\n      const maxPop = Math.max(...res.features.map(x => x.properties.cases), 0);\r\n      \r\n      for (const c of res.features) {\r\n        this.covidService.getJson(c.properties.state).subscribe((res: any) => {\r\n          stateInfo = JSON.parse(JSON.stringify(res));\r\n          c.properties.cases = stateInfo.active as number;\r\n          const lon = c.geometry.coordinates[0];\r\n          const lat = c.geometry.coordinates[1];\r\n          const circle = L.circleMarker([lat, lon], {\r\n          radius: MarkerService.scaledRadius((c.properties.cases)/100, maxPop)\r\n        });\r\n        circle.bindPopup(this.popupService.makeCapitalPopup(c.properties));\r\n        circle.addTo(map);\r\n          });\r\n      }\r\n    });\r\n  }\r\n}","import {NgModule} from '@angular/core';\r\nimport {APOLLO_OPTIONS} from 'apollo-angular';\r\nimport {ApolloClientOptions, InMemoryCache} from '@apollo/client/core';\r\nimport {HttpLink} from 'apollo-angular/http';\r\n\r\nconst uri = 'https://covid19-graphql.now.sh'; // <-- add the URL of the GraphQL server here\r\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\r\n  return {\r\n    link: httpLink.create({uri}),\r\n    cache: new InMemoryCache(),\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  providers: [\r\n    {\r\n      provide: APOLLO_OPTIONS,\r\n      useFactory: createApollo,\r\n      deps: [HttpLink],\r\n    },\r\n  ],\r\n})\r\nexport class GraphQLModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { Apollo, gql } from 'apollo-angular';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take, tap } from 'rxjs/operators';\r\nconst QUERY = gql `\r\n{\r\n  results(countries: [\"US\"], date: { eq: \"2021/05/05\" }) {\r\n    country {\r\n      name\r\n    }\r\n    date\r\n    confirmed\r\n    deaths\r\n    growthRate\r\n  }\r\n}\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GqlcovidService {\r\nprivate countryDataSubject = new BehaviorSubject<any>(null);\r\ncountryData$ = this.countryDataSubject.asObservable(); \r\n\r\nprivate confirmedCases = new BehaviorSubject<any>(null);\r\nconfirmed$ = this.confirmedCases.asObservable();\r\n\r\nprivate deathsCases = new BehaviorSubject<any>(null);\r\ndeaths$ = this.deathsCases.asObservable();\r\n\r\nprivate growthRateCases = new BehaviorSubject<any>(null);\r\ngrowthRate$ = this.growthRateCases.asObservable();\r\n\r\npublic deaths : number;\r\npublic growthRate : number;\r\n\r\n  constructor(private apllo: Apollo) {\r\n    this.getDataGql();\r\n   }\r\n\r\n  private getDataGql():void{\r\n    this.apllo.watchQuery<any>({\r\n      query: QUERY\r\n    }).valueChanges.pipe(\r\n    take(1),\r\n    tap(({data}) => {\r\n      const {results} = data;\r\n\r\n      this.countryDataSubject.next(results[0]);\r\n      this.confirmedCases.next(results[0].confirmed);\r\n      this.deathsCases.next(results[0].deaths);\r\n      this.growthRateCases.next(results[0].growthRate);\r\n      console.log(results);\r\n     // this.confirmedCases.next(results[0].confirmed);\r\n      //this.confirmed = data.results[0].confirmed;\r\n    })\r\n    ).subscribe();\r\n\r\n  }\r\n  \r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PopUpService {\r\n  constructor() { }\r\n\r\n  makeCapitalPopup(data: any): string {\r\n    return `` +\r\n      `<div>State: ${ data.state }</div>` +\r\n      `<div>Active cases: ${ data.cases }</div>`\r\n  }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CovidService {\r\n  urlState : string = 'https://corona.lmao.ninja/v2/states/';\r\n  urlState2 : string = '?yesterday=true'\r\n\r\n  constructor(private httpClient : HttpClient ) { }\r\n  \r\n  getJson(state: string){\r\n    return this.httpClient.get(this.urlState + state + this.urlState2);\r\n  }\r\n\r\n  getAllStates(){\r\n    return this.httpClient.get('https://corona.lmao.ninja/v2/states?sort=&yesterday=true');\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-leaflet-example';\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MarkerService } from './marker.service';\r\nimport { PopUpService } from './popup.service';\r\nimport { ShapeService } from './shape.service';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { CovidComponent } from './covid/covid.component';\r\nimport { GraphQLModule } from './graphql.module';\r\nimport { GqlcovidComponent } from './gqlcovid/gqlcovid.component';\r\nimport { LandingPageComponent } from './landing-page/landing-page.component'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MapComponent,\r\n    CovidComponent,\r\n    GqlcovidComponent,\r\n    LandingPageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    GraphQLModule\r\n  ],\r\n  providers: [\r\n    MarkerService,\r\n    PopUpService,\r\n    ShapeService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShapeService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getStateShapes() {\r\n    return this.http.get('/assets/data/gz_2010_us_040_00_5m.json');\r\n  }\r\n}","import { Component, AfterViewInit } from '@angular/core';\r\nimport * as L from 'leaflet';\r\nimport { MarkerService } from '../marker.service';\r\nimport { ShapeService } from '../shape.service';\r\n\r\nconst iconRetinaUrl = 'assets/marker-icon-2x.png';\r\nconst iconUrl = 'assets/marker-icon.png';\r\nconst shadowUrl = 'assets/marker-shadow.png';\r\nconst iconDefault = L.icon({\r\n  iconRetinaUrl,\r\n  iconUrl,\r\n  shadowUrl,\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  tooltipAnchor: [16, -28],\r\n  shadowSize: [41, 41]\r\n});\r\nL.Marker.prototype.options.icon = iconDefault;\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css']\r\n})\r\nexport class MapComponent implements AfterViewInit {\r\n  private map;\r\n  private states;\r\n\r\n  constructor(\r\n    private markerService: MarkerService,\r\n    private shapeService: ShapeService\r\n  ) { }\r\n\r\n  private initMap(): void {\r\n    this.map = L.map('map', {\r\n      center: [ 39.8282, -98.5795 ],\r\n      zoom: 3\r\n    });\r\n\r\n    const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      maxZoom: 18,\r\n      minZoom: 3,\r\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n    });\r\n\r\n    tiles.addTo(this.map);\r\n  }\r\n\r\n  private initStatesLayer() {\r\n    const stateLayer = L.geoJSON(this.states, {\r\n      style: (feature) => ({\r\n        weight: 3,\r\n        opacity: 0.5,\r\n        color: '#ffcc66',\r\n        fillOpacity: 0.8,\r\n        fillColor: '#ffffcc'\r\n      })\r\n    });\r\n\r\n    this.map.addLayer(stateLayer);\r\n    stateLayer.bringToBack();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.initMap();\r\n    // this.markerService.makeCapitalMarkers(this.map);\r\n    this.markerService.makeCapitalCircleMarkers(this.map);\r\n    this.shapeService.getStateShapes().subscribe(states => {\r\n      this.states = states;\r\n      this.initStatesLayer();\r\n    });\r\n  }\r\n}","\r\n<div class=\"map-container\">\r\n    <div class=\"map-frame\">\r\n      <div id=\"map\"></div>\r\n    </div>\r\n</div>\r\n<button type=\"button\" class=\"btn\"  routerLink=\"/gql\">General Covid Info</button>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-landing-page',\r\n  templateUrl: './landing-page.component.html',\r\n  styleUrls: ['./landing-page.component.css']\r\n})\r\nexport class LandingPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <button type=\"button\" class=\"btn\"  routerLink=\"/map\">CovidInfo</button>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" routerLink=\"/map\" href=\"#\"> Map <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\"  routerLink=\"/gql\" href=\"\">General Covid Situation USA</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n  \r\n    <nav class=\"navbar navbar-light descripcion\">\r\n        <div class=\"container-fluid\">\r\n            <span class=\"navbar-brand mb-5 h1\"></span>\r\n        </div>\r\n    </nav>\r\n\r\n    <div class=\"descripcion text-center\">\r\n        <h2>REPORTE DE COVID-19</h2>\r\n        <h2 class=\"mx-5 my-5\">\r\n            El objetivo de este reporte es poder visualizar los casos de COVID-19 actualizados día a día en Estados\r\n            Unidos.\r\n            El uso de dicho reporte solo es informativo.\r\n        </h2>\r\n        <br>\r\n\r\n    </div>\r\n\r\n    <!-- div que contiene mapa -->\r\n    <div id=\"mapa\"></div>\r\n\r\n\r\n    <!-- div que contiene el login-->\r\n    <div id=\"login\"></div>\r\n\r\n    <!-- div que contiene el footer -->\r\n    <div id=\"footer\">\r\n        <br>\r\n        <br>\r\n        <footer class=\"footer\">\r\n            <div class=\"content text-center\">\r\n                <h6>\r\n                    © Copyright ReporteCovid 2021.\r\n                </h6>\r\n                <p> Todos los derechos reservados </p>\r\n                <p> Desarrollado por Joaquín Vila, Carlos Vallejo y Alejandra Robles</p>\r\n            </div>\r\n        </footer>\r\n        <!-- Fin de footer -->\r\n\r\n    </div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CovidService } from './covid.service';\r\n\r\n@Component({\r\n  selector: 'app-covid',\r\n  templateUrl: './covid.component.html',\r\n  styleUrls: ['./covid.component.css']\r\n})\r\nexport class CovidComponent implements OnInit {\r\n  californiaInfo: any;\r\n  california: number;\r\n  allStates: Object;\r\n\r\n  constructor(private covidService : CovidService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCovidData();\r\n    this.getAllStates();\r\n  }\r\n\r\n  getCovidData(): void{\r\n    this.covidService.getJson('California').subscribe((res: any) => {\r\n      this.californiaInfo = JSON.parse(JSON.stringify(res));\r\n      this.california = this.californiaInfo.active\r\n      });\r\n  }\r\n\r\n  getAllStates(): void{\r\n    this.covidService.getAllStates().subscribe((res: any) => {\r\n      this.allStates = res;\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n{{californiaInfo | json}}\r\n\r\n<p><br>Total cases in California: {{california}}</p>\r\n\r\n\r\n{{allStates[0].active | json}}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CovidComponent } from './covid/covid.component';\r\nimport { GqlcovidComponent } from './gqlcovid/gqlcovid.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport { LandingPageComponent } from './landing-page/landing-page.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LandingPageComponent },\r\n  { path: 'map', component: MapComponent },\r\n  { path: 'covid', component: CovidComponent },\r\n  { path: 'gql', component: GqlcovidComponent },\r\n  { path: 'lp', component: LandingPageComponent }  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}